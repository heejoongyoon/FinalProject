package kr.or.ddit.community.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.community.service.CommuService;
import kr.or.ddit.community.vo.ComBBVO;
import kr.or.ddit.community.vo.ComBoardVO;
import kr.or.ddit.community.vo.ComJoinVO;
import kr.or.ddit.community.vo.CommuVO;
import kr.or.ddit.login.vo.EmpVO;
import kr.or.ddit.notice.vo.NoticeVO;


@Controller
public class CommuController {
private static Logger logger = LoggerFactory.getLogger(CommuController.class);
	
	@Autowired
	CommuService comService;
	
	// 커뮤니티 작성 화면
	@RequestMapping(value="/com/insert",method=RequestMethod.GET)
	public String comInsert(HttpServletRequest request, Model model) throws Exception {
		
		if(request.getSession().getAttribute("empVo") != null) {
			String empno = ((EmpVO) request.getSession().getAttribute("empVo")).getEmpno();
			int estblEmpno = Integer.parseInt(empno);
			List<CommuVO> myList = this.comService.comMy(estblEmpno);
			logger.info("myList : " + myList.toString());
			model.addAttribute("myList", myList);
		}
		return "community/comInsert";
	}
	
	// 커뮤니티 작성
	@RequestMapping(value="/com/insert",method=RequestMethod.POST)
	public String comInsertPost(@ModelAttribute CommuVO commuVo) throws Exception {
		logger.info("커뮤니티 만들기");
		// 나의 커뮤니티
		
		int result = this.comService.comInsert(commuVo);
		this.comService.comNoticeB(commuVo.getCmmntyNo());
		this.comService.comActiveB(commuVo.getCmmntyNo());
		return "redirect:/com/list";
	}
	
	// 커뮤니티 목록
	@RequestMapping(value="/com/list", method=RequestMethod.GET)
	public String comList(HttpServletRequest request, Model model) throws Exception {
		// 나의 커뮤니티
		if(request.getSession().getAttribute("empVo") != null) {
			String empno = ((EmpVO) request.getSession().getAttribute("empVo")).getEmpno();
			int estblEmpno = Integer.parseInt(empno);
			List<CommuVO> myList = this.comService.comMy(estblEmpno);
			logger.info("myList : " + myList.toString());
			model.addAttribute("myList", myList);
		}
		
		List<CommuVO> list = this.comService.comList();
		
		model.addAttribute("list", list);
		
		return "community/comList";
	}
	
	// 커뮤니티 모달 조회
	@ResponseBody
	@RequestMapping(value="/com/modalAjax",method=RequestMethod.POST)
	public CommuVO comModal(@RequestBody int cmmntyNo, Model model) throws Exception {
		logger.info("cmmntyNo : " + cmmntyNo);
		
		CommuVO commuVO = this.comService.comModal(cmmntyNo);
		logger.info("commuVO(detail) : " + commuVO.toString());
		
		model.addAttribute("commuVO", commuVO);
		
		return commuVO;
		
	}
	
	// 커뮤니티 가입하기
	@RequestMapping(value="/com/inJoin",method=RequestMethod.POST)
	public String comJoin(@ModelAttribute ComJoinVO comJoinVo) throws Exception {
		int result = this.comService.comJoin(comJoinVo);
		return "redirect:/com/list";
	}

	// 커뮤니티 가입한 모든 회원
	// 커뮤니티 목록
	@RequestMapping(value="/com/comJoinMem", method=RequestMethod.GET)
	public String comAllMem(HttpServletRequest request, Model model) throws Exception {
		// 나의 커뮤니티
		if(request.getSession().getAttribute("empVo") != null) {
			String empno = ((EmpVO) request.getSession().getAttribute("empVo")).getEmpno();
			int empnoLogin = Integer.parseInt(empno);
			List<CommuVO> myList = this.comService.comMy(empnoLogin);
			List<ComJoinVO> joinList = this.comService.comAllMem(empnoLogin);
			logger.info("myList : " + myList.toString());
			model.addAttribute("myList", myList);
			model.addAttribute("joinList", joinList);
		}
		
		return "community/comJoinMem";
		
	}
	
	// 커뮤니티 가입한 모든 회원
	// 커뮤니티 목록
	@RequestMapping(value="/com/comMyJoin", method=RequestMethod.GET)
	public String comMyJoin(HttpServletRequest request, Model model) throws Exception {
		// 나의 커뮤니티
		if(request.getSession().getAttribute("empVo") != null) {
			String empno = ((EmpVO) request.getSession().getAttribute("empVo")).getEmpno();
			int empnoLogin = Integer.parseInt(empno);
			List<CommuVO> myList = this.comService.comMy(empnoLogin);
			List<ComJoinVO> standList = this.comService.comStand(empnoLogin);
			List<ComJoinVO> acceptList = this.comService.comAccept(empnoLogin);
			logger.info("myList : " + myList.toString());
			model.addAttribute("myList", myList);
			model.addAttribute("standList", standList);
			model.addAttribute("acceptList", acceptList);
		}
		
		return "community/comMyJoin";
		
	}
	
	// 커뮤니티 가입 승인
	@RequestMapping(value="/com/Atupdate", method=RequestMethod.POST)
	public String comAtAccept(@ModelAttribute ComJoinVO comJoinVo) throws Exception {
		
		int result = this.comService.comAtUpdate(comJoinVo);
		return "redirect:/com/comMyJoin";
		
	}
	
	// 커뮤니티 가입 취소
	@RequestMapping(value="/com/memCancel",method=RequestMethod.POST)
	public String deletePost(@ModelAttribute ComJoinVO comJoinVo) throws Exception {
		
		int result = this.comService.comAtCancel(comJoinVo);
		return "redirect:/com/comMyJoin";
	}
	
	// 커뮤니티 정보
	@RequestMapping(value="/com/detail", method=RequestMethod.GET)
	public String comAtAccept(@RequestParam(value="cmmntyNo", required=false) int cmmntyNo, Model model) throws Exception {
		
		//커뮤니티 상세 정보를 가져옴
		CommuVO commuVo = this.comService.comDetail(cmmntyNo);
		List<ComBoardVO> boardList = this.comService.comBoard(cmmntyNo);
		List<ComJoinVO> memList = this.comService.comMemList(cmmntyNo);
		List<ComBBVO> notice5 = this.comService.comNewNotice(cmmntyNo);
		model.addAttribute("commuVo", commuVo);
		model.addAttribute("boardList", boardList);
		model.addAttribute("memList", memList);
		model.addAttribute("notice5", notice5);
			
		//forwarding
		return "community/comDetail";
		
	}
	
	
}
