package kr.or.ddit.survey.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kr.or.ddit.survey.mapper.SurveyMapper;
import kr.or.ddit.survey.service.SurveyService;
import kr.or.ddit.survey.vo.SurveyVO;

@Service
public class SurveyServiceImpl implements SurveyService{
	
	@Autowired
	SurveyMapper sm;
	
	// 설문 작성
	@Override
	public int createQustnr(SurveyVO surveyVO) {
		int createQustnrResult = sm.createQustnr(surveyVO);
		// 설문 등록 성공 시
		if(createQustnrResult > 0) {
			// insert된 설문의 번호
			int qustnrNo = surveyVO.getQustnrNo();
			// 설문 번호 세팅
			surveyVO.setQustnrNo(qustnrNo);
			
			// ------ 1. 설문 대상자 등록 시작 --------
			// 설문 대상자 배열에서 설문 대상자를 한 명씩 꺼냄
			for(int i=0; i<surveyVO.getTrgterEmpnoArr().size(); i++) {
				int trgterEmpno = surveyVO.getTrgterEmpnoArr().get(i);
				// 하나씩 꺼낸 설문 대상자를 세팅
				surveyVO.setTrgterEmpno(trgterEmpno);
				// 설문 대상자 등록
				sm.createTrgterEmpno(surveyVO);
			}
			// ---------------------------------
			
			// --------- 2. 문항 등록 시작 ----------
			// 문항 번호를 담을 list
			List<Integer> qesitmNoArr = new ArrayList<Integer>();
			
			// 문항 제목의 size 만큼 돌려서
			for(int i=0; i<surveyVO.getCnArr().size(); i++) {
				// 문항 번호먼저 등록
				int createQesitmNoResult = sm.createQesitmNo(surveyVO);
				// 문항 번호가 등록되면
				if(createQesitmNoResult > 0) {
					// qesitmNoArr에 해당 문항 번호들을 담기
					qesitmNoArr.add(surveyVO.getQesitmNo());
				}
			}
			// 담긴 각 문항번호를 surveyVO의 qesitmNoArr 변수에 담기
			surveyVO.setQesitmNoArr(qesitmNoArr);
			
			// 문항 번호의 size 만큼 돌려서
			for(int i=0; i<surveyVO.getQesitmNoArr().size(); i++) {
				surveyVO.setQesitmNo(surveyVO.getQesitmNoArr().get(i));
				// list로 되있는 문항 타입을 code변수에 넣기
				surveyVO.setCode(surveyVO.getCodeArr().get(i));
				// list로 되있는 문항 제목을 cn 변수에 넣기
				surveyVO.setCn(surveyVO.getCnArr().get(i));
				
				sm.addQesitmInfo(surveyVO);
				// ---------------------------------
				
				// --------- 3. 보기 등록 시작 ----------
				// 보기 번호 먼저 등록
				List<Integer> exNoArr = new ArrayList<Integer>();
				List<String> exCnArr = surveyVO.getExCnArr().get(i);
				List<Integer> exScoreArr = surveyVO.getExScoreArr().get(i);
				for(int j=0; j<exCnArr.size(); j++) {
					int createExNo = sm.createExNo(surveyVO);
					if(createExNo > 0) {
						exNoArr.add(surveyVO.getExNo());
						
						surveyVO.setExNoArr(exNoArr);
						System.out.println("세팅된 보기번호 : " + surveyVO.getExNo());
						
						int exScore = exScoreArr.get(j);
						String exCn = exCnArr.get(j);
						
						surveyVO.setExScore(exScore);
						surveyVO.setExCn(exCn);
						
						sm.addExInfo(surveyVO);
					}
				}
				// ----------------------------------
			}
			
		}
		
		return createQustnrResult;
	}
	
	// 설문 임시저장
	@Override
	public int saveQustnr(SurveyVO surveyVO) {
		int saveQustnrResult = sm.saveQustnr(surveyVO);
		// 설문 등록 성공 시
		if(saveQustnrResult > 0) {
			// insert된 설문의 번호
			int qustnrNo = surveyVO.getQustnrNo();
			// 설문 번호 세팅
			surveyVO.setQustnrNo(qustnrNo);
			
			// ------ 1. 설문 대상자 등록 시작 --------
			// 설문 대상자 배열에서 설문 대상자를 한 명씩 꺼냄
			for(int i=0; i<surveyVO.getTrgterEmpnoArr().size(); i++) {
				int trgterEmpno = surveyVO.getTrgterEmpnoArr().get(i);
				// 하나씩 꺼낸 설문 대상자를 세팅
				surveyVO.setTrgterEmpno(trgterEmpno);
				// 설문 대상자 등록
				sm.createTrgterEmpno(surveyVO);
			}
			// ---------------------------------
			
			// --------- 2. 문항 등록 시작 ----------
			// 문항 번호를 담을 list
			List<Integer> qesitmNoArr = new ArrayList<Integer>();
			
			// 문항 제목의 size 만큼 돌려서
			for(int i=0; i<surveyVO.getCnArr().size(); i++) {
				// 문항 번호먼저 등록
				int createQesitmNoResult = sm.createQesitmNo(surveyVO);
				// 문항 번호가 등록되면
				if(createQesitmNoResult > 0) {
					// qesitmNoArr에 해당 문항 번호들을 담기
					qesitmNoArr.add(surveyVO.getQesitmNo());
				}
			}
			// 담긴 각 문항번호를 surveyVO의 qesitmNoArr 변수에 담기
			surveyVO.setQesitmNoArr(qesitmNoArr);
			
			// 문항 번호의 size 만큼 돌려서
			for(int i=0; i<surveyVO.getQesitmNoArr().size(); i++) {
				surveyVO.setQesitmNo(surveyVO.getQesitmNoArr().get(i));
				// list로 되있는 문항 타입을 code변수에 넣기
				surveyVO.setCode(surveyVO.getCodeArr().get(i));
				// list로 되있는 문항 제목을 cn 변수에 넣기
				surveyVO.setCn(surveyVO.getCnArr().get(i));
				
				sm.addQesitmInfo(surveyVO);
				// ---------------------------------
				
				// --------- 3. 보기 등록 시작 ----------
				// 보기 번호 먼저 등록
				List<Integer> exNoArr = new ArrayList<Integer>();
				List<String> exCnArr = surveyVO.getExCnArr().get(i);
				List<Integer> exScoreArr = surveyVO.getExScoreArr().get(i);
				for(int j=0; j<exCnArr.size(); j++) {
					int createExNo = sm.createExNo(surveyVO);
					if(createExNo > 0) {
						exNoArr.add(surveyVO.getExNo());
						
						surveyVO.setExNoArr(exNoArr);
						System.out.println("세팅된 보기번호 : " + surveyVO.getExNo());
						
						int exScore = exScoreArr.get(j);
						String exCn = exCnArr.get(j);
						
						surveyVO.setExScore(exScore);
						surveyVO.setExCn(exCn);
						
						sm.addExInfo(surveyVO);
					}
				}
				// ----------------------------------
			}
			
		}
		
		return saveQustnrResult;
	}
	
	// 설문 대상자 등록
	@Override
	public int createTrgterEmpno(SurveyVO surveyVO) {
		return sm.createTrgterEmpno(surveyVO);
	}
	
	// 문항 번호만 생성하여 문항 등록
	@Override
	public int createQesitmNo(SurveyVO surveyVO) {
		return sm.createQesitmNo(surveyVO);
	}
	
	// 문항 제목, 문항 타입 정보 추가
	@Override
	public int addQesitmInfo(SurveyVO surveyVO) {
		return sm.addQesitmInfo(surveyVO);
	}
	
	// 보기번호  등록
	@Override
	public int createExNo(SurveyVO surveyVO) {
		return sm.createExNo(surveyVO);
	}
	
	// 보기 내용, 보기 점수 추가
	@Override
	public int addExInfo(SurveyVO surveyVO) {
		return sm.addQesitmInfo(surveyVO);
	}
	
	// 미참여한 모든 설문을 최신순으로 조회(4개)
	@Override
	public List<SurveyVO> AllsurveyListRspnsN(String empno) {
		return sm.AllsurveyListRspnsN(empno);
	}
	
	// 작성된 설문을 최신순으로 조회(15개)
	@Override
	public List<SurveyVO> surveyLatelyList(String empno) {
		return sm.surveyLatelyList(empno);
	}
	
	// 진행중인 설문 조회
	@Override
	public List<SurveyVO> runSurveyList(String empno) {
		return sm.runSurveyList(empno);
	}
	
	// 마감된 설문 조회
	@Override
	public List<SurveyVO> doneSurveyList(String empno) {
		return sm.doneSurveyList(empno);
	}
	
	// 내가 만든 설문 조회
	@Override
	public List<SurveyVO> mineSurveyList(String empno) {
		return sm.mineSurveyList(empno);
	}

	


}
