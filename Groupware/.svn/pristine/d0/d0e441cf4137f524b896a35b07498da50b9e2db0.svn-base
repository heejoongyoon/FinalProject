package kr.or.ddit.notice.controller;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.notice.service.NoticeService;
import kr.or.ddit.notice.vo.NoticeVO;

@Controller
public class NoticeController {
	private static Logger logger = LoggerFactory.getLogger(NoticeController.class);
	
	@Autowired
	NoticeService noticeService;
	
	// 공지 목록
	@RequestMapping(value="/notice/list", method=RequestMethod.GET)
	public String noticeList(Model model) throws Exception {
		
		List<NoticeVO> list = this.noticeService.noticeList();
		
		model.addAttribute("list", list);
		logger.info("model : " + model);
		
		return "notice/list";
	}
	
	// 공지 작성 화면
	@RequestMapping(value="/notice/insert",method=RequestMethod.GET)
	public String faqInsert() {
		
		return "notice/insert";
	}
	
	// 공지 작성
	@RequestMapping(value="/notice/insert",method=RequestMethod.POST)
	public String faqInsertPost(@ModelAttribute NoticeVO noticeVo) throws Exception {
		
		int result = this.noticeService.noticeInsert(noticeVo);
		
		return "redirect:/notice/list";
	}
	
	// 공지 상세 조회
	@RequestMapping(value="/notice/detail",method=RequestMethod.GET)
	public String detail(@RequestParam(value="noticeNo", required=false) int noticeNo,
			Model model) throws Exception {
		
		logger.info("noticeNo : " + noticeNo);
		//고객의 상세 정보를 가져옴
		NoticeVO noticeVo = this.noticeService.noticeDetail(noticeNo);
		logger.info("noticeVo(detail) : " + noticeVo.toString());
		
		model.addAttribute("noticeVo", noticeVo);
		
		//forwarding
		return "notice/detail";
	}
	
	// 공지 수정
	@RequestMapping(value="/notice/update",method=RequestMethod.POST)
	public String update(@ModelAttribute NoticeVO noticeVo) throws Exception {
		logger.info("update에 왔다, noticeVo : " + noticeVo);
		int result = this.noticeService.noticeUpdate(noticeVo);
		logger.info("result : " + result);
		
		return "redirect:/notice/detail?noticeNo="+noticeVo.getNoticeNo();
	}
	
	// 공지 삭제
	@RequestMapping(value="/notice/delete",method=RequestMethod.POST)
	public String deletePost(@RequestParam(value="noticeNo", required=true) int noticeNo) {
		logger.info("noticeNo : " + noticeNo);
		
		int result = this.noticeService.noticeDelete(noticeNo);
		return "redirect:/notice/list";
	}
}
